@use "sass:math";

.ist-kandi-img {
    position: relative;
    padding-bottom: 100%;

    img {
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        object-fit: cover;
        background-color: var(--spred);
    }
}

.ist-kandi-quote {
    font-family: "CrimsonPro", serif;
    font-style: italic;
    font-weight: 600;
    font-size: 3.5rem;
    line-height: 1;

    &:not(.ist-quote-has-paragraph), &.ist-quote-has-paragraph p {
        &::before {
            content: "«";
            display: inline-block;
            margin-right: -0.1em;
        }

        &::after {
            content: "»";
            display: inline-block;
            margin-left: -0.1em;
        }
    }
}

@for $i from 0 through 100 {
    .ist-kandi[data-kandi-id="#{$i}"] {
        $cols: 5;
        $row: math.floor(math.div($i, $cols));
        --gap: 3rem;
        --offset: calc(#{$i} - (#{$cols} * #{$row}));
        --contWidth: 1795px;
        --width: calc((var(--contWidth) - (var(--gap) * (#{$cols} - 1))) / #{$cols});
        --offLeft: calc(var(--offset) * (var(--width) + var(--gap)));
        --mLeft: calc((((100vw - var(--contWidth)) / 2) + var(--offLeft)) * (-1));

        @media (max-width: 1995px) {
            --contWidth: 90vw;
        }

        @media (max-width: 1080px) {
            $cols: 3;
            $row: math.floor(math.div($i, $cols));
            --gap: 2rem;
            --offset: calc(#{$i} - (#{$cols} * #{$row}));
            --width: calc((var(--contWidth) - (var(--gap) * (#{$cols} - 1))) / #{$cols});
            --offLeft: calc(var(--offset) * (var(--width) + var(--gap)));
            --mLeft: calc((((100vw - var(--contWidth)) / 2) + var(--offLeft)) * (-1));
        }

        @media (max-width: 780px) {
            $cols: 2;
            $row: math.floor(math.div($i, $cols));
            --gap: 2rem;
            --offset: calc(#{$i} - (#{$cols} * #{$row}));
            --width: calc((var(--contWidth) - (var(--gap) * (#{$cols} - 1))) / #{$cols});
            --offLeft: calc(var(--offset) * (var(--width) + var(--gap)));
            --mLeft: calc((((100vw - var(--contWidth)) / 2) + var(--offLeft)) * (-1));
        }

        @media (max-width: 360px) {
            $cols: 1;
            $row: math.floor(math.div($i, $cols));
            --gap: 1.5rem;
            --offset: calc(#{$i} - (#{$cols} * #{$row}));
            --width: calc((var(--contWidth) - (var(--gap) * (#{$cols} - 1))) / #{$cols});
            --offLeft: calc(var(--offset) * (var(--width) + var(--gap)));
            --mLeft: calc((((100vw - var(--contWidth)) / 2) + var(--offLeft)) * (-1));
        }

        .ist-kandi-details-wrapper {
            margin-left: var(--mLeft);
            width: 100vw;
        }
    }
}

.ist-kandi {
    cursor: pointer;
    transition: 0.5s ease filter;

    .ist-kandi-arrow {
        max-height: 0;
        overflow: hidden;
        transition: 0.5s ease max-height;

        svg {
            height: 2rem;
        }
    }

    .ist-kandi-details-wrapper {
        max-height: 0;
        overflow: hidden;
        transition: 0.5s ease max-height;
    }
}

.ist-kandigrid-inner-open {
    .ist-kandi {
        filter: grayscale(100%);
        // .ist-kandi-img {
        // }

        &.ist-kandi-open {
            filter: grayscale(0%);
        }
    }
}